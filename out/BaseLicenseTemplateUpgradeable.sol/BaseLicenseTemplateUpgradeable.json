{"abi":[{"type":"function","name":"exists","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getEarlierExpireTime","inputs":[{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"},{"name":"start","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getExpireTime","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"start","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLicenseTermsURI","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMetadataURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getRoyaltyPolicy","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"royaltyPolicy","type":"address","internalType":"address"},{"name":"royaltyPercent","type":"uint32","internalType":"uint32"},{"name":"mintingLicenseFee","type":"uint256","internalType":"uint256"},{"name":"currencyToken","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isLicenseTransferable","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"toJson","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalRegisteredLicenseTerms","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"verifyCompatibleLicenses","inputs":[{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifyMintLicenseToken","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"licensee","type":"address","internalType":"address"},{"name":"licensorIpId","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyRegisterDerivative","inputs":[{"name":"childIpId","type":"address","internalType":"address"},{"name":"parentIpId","type":"address","internalType":"address"},{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"licensee","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyRegisterDerivativeForAllParents","inputs":[{"name":"childIpId","type":"address","internalType":"address"},{"name":"parentIpId","type":"address[]","internalType":"address[]"},{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"},{"name":"childIpOwner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"LicenseTermsRegistered","inputs":[{"name":"licenseTermsId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"licenseTemplate","type":"address","indexed":true,"internalType":"address"},{"name":"licenseTerms","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"exists(uint256)":"4f558e79","getEarlierExpireTime(uint256[],uint256)":"f6a76f7c","getExpireTime(uint256,uint256)":"8dc5398b","getLicenseTermsURI(uint256)":"d944a9bf","getMetadataURI()":"86a92af7","getRoyaltyPolicy(uint256)":"60c2b0f8","isLicenseTransferable(uint256)":"c32b6fcc","name()":"06fdde03","supportsInterface(bytes4)":"01ffc9a7","toJson(uint256)":"ef647765","totalRegisteredLicenseTerms()":"225b88f1","verifyCompatibleLicenses(uint256[])":"9577ac09","verifyMintLicenseToken(uint256,address,address,uint256)":"34494a5c","verifyRegisterDerivative(address,address,uint256,address)":"bd24bb52","verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":"d7031a8d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"licenseTemplate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"licenseTerms\",\"type\":\"bytes\"}],\"name\":\"LicenseTermsRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"getEarlierExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"getExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"getLicenseTermsURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyPolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"royaltyPolicy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"royaltyPercent\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"mintingLicenseFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"isLicenseTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"toJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegisteredLicenseTerms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"}],\"name\":\"verifyCompatibleLicenses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"licensorIpId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"verifyMintLicenseToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childIpId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"parentIpId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"}],\"name\":\"verifyRegisterDerivative\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childIpId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"parentIpId\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"childIpOwner\",\"type\":\"address\"}],\"name\":\"verifyRegisterDerivativeForAllParents\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"LicenseTermsRegistered(uint256,address,bytes)\":{\"params\":{\"licenseTemplate\":\"The address of the license template.\",\"licenseTerms\":\"The data of the license.\",\"licenseTermsId\":\"The ID of the license terms.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"exists(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the license terms exists, false otherwise.\"}},\"getEarlierExpireTime(uint256[],uint256)\":{\"params\":{\"licenseTermsIds\":\"The IDs of the license terms.\",\"start\":\"The start time to calculate the expiration time.\"},\"returns\":{\"_0\":\"The earliest expiration time.\"}},\"getExpireTime(uint256,uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\",\"start\":\"The start time.\"},\"returns\":{\"_0\":\"The expiration time.\"}},\"getLicenseTermsURI(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"The URI of the license terms.\"}},\"getRoyaltyPolicy(uint256)\":{\"details\":\"All License Templates should implement this method. The royalty policy is used to calculate royalties and pay minting license fee. Should return address(0) if the license template does not support a royalty policy or the license term does set RoyaltyPolicy.\",\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"currencyToken\":\"The address of the ERC20 token, used for minting license fee and royalties. the currency token will used for pay for license token minting fee and royalties.\",\"mintingLicenseFee\":\"The fee for minting a license.\",\"royaltyPercent\":\"The percentage of the royalty.\",\"royaltyPolicy\":\"The address of the royalty policy specified for the license terms.\"}},\"isLicenseTransferable(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the license terms is transferable, false otherwise.\"}},\"toJson(uint256)\":{\"details\":\"the json will be part of metadata as attributes return by tokenURI() license token, hence the json format should follow the common NFT metadata standard.\",\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"The JSON string of the license terms.\"}},\"totalRegisteredLicenseTerms()\":{\"returns\":{\"_0\":\"The total number of registered license terms.\"}},\"verifyCompatibleLicenses(uint256[])\":{\"details\":\"This function is called by the LicensingModule to verify license compatibility when registering a derivative IP to multiple parent IPs. It ensures that the licenses of all parent IPs are compatible with each other during the registration process.\",\"params\":{\"licenseTermsIds\":\"The IDs of the license terms.\"},\"returns\":{\"_0\":\"True if the licenses are compatible, false otherwise.\"}},\"verifyMintLicenseToken(uint256,address,address,uint256)\":{\"details\":\"the function will be called by the LicensingModule when minting a license token to verify the minting is whether allowed by the license terms.\",\"params\":{\"amount\":\"The amount of licenses to mint.\",\"licenseTermsId\":\"The ID of the license terms.\",\"licensee\":\"The address of the licensee who will receive the license token.\",\"licensorIpId\":\"The IP ID of the licensor who attached the license terms minting the license token.\"},\"returns\":{\"_0\":\"True if the minting is verified, false otherwise.\"}},\"verifyRegisterDerivative(address,address,uint256,address)\":{\"params\":{\"childIpId\":\"The IP ID of the derivative.\",\"licenseTermsId\":\"The ID of the license terms.\",\"licensee\":\"The address of the licensee.\",\"parentIpId\":\"The IP ID of the parent.\"},\"returns\":{\"_0\":\"True if the registration is verified, false otherwise.\"}},\"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)\":{\"details\":\"This function is called by the LicensingModule to verify licenses for registering a derivative IP to multiple parent IPs. the function will verify the derivative for each parent IP's license and also verify all licenses are compatible.\",\"params\":{\"childIpId\":\"The IP ID of the derivative.\",\"childIpOwner\":\"The address of the derivative IP owner.\",\"licenseTermsIds\":\"The IDs of the license terms.\",\"parentIpId\":\"The IP IDs of the parents.\"},\"returns\":{\"_0\":\"True if the registration is verified, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"LicenseTermsRegistered(uint256,address,bytes)\":{\"notice\":\"Emitted when a new license terms is registered.\"}},\"kind\":\"user\",\"methods\":{\"exists(uint256)\":{\"notice\":\"Checks if a license terms exists.\"},\"getEarlierExpireTime(uint256[],uint256)\":{\"notice\":\"Returns the earliest expiration time among the given license terms.\"},\"getExpireTime(uint256,uint256)\":{\"notice\":\"Returns the expiration time of a license terms.\"},\"getLicenseTermsURI(uint256)\":{\"notice\":\"Returns the URI of the license terms.\"},\"getMetadataURI()\":{\"notice\":\"Returns the URL to the off chain metadata\"},\"getRoyaltyPolicy(uint256)\":{\"notice\":\"Returns the royalty policy of a license terms.\"},\"isLicenseTransferable(uint256)\":{\"notice\":\"Checks if a license terms is transferable.\"},\"name()\":{\"notice\":\"Returns the name of the license template\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 interface support.\"},\"toJson(uint256)\":{\"notice\":\"Converts the license terms to a JSON string which will be part of the metadata of license token.\"},\"totalRegisteredLicenseTerms()\":{\"notice\":\"Returns the total number of registered license terms.\"},\"verifyCompatibleLicenses(uint256[])\":{\"notice\":\"Verifies if the licenses are compatible.\"},\"verifyMintLicenseToken(uint256,address,address,uint256)\":{\"notice\":\"Verifies the minting of a license token.\"},\"verifyRegisterDerivative(address,address,uint256,address)\":{\"notice\":\"It verifies whether the derivative's registration is permitted under those terms.\"},\"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)\":{\"notice\":\"Verifies the registration of a derivative for all parent IPs.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BaseLicenseTemplateUpgradeable.sol\":\"BaseLicenseTemplateUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol\":{\"keccak256\":\"0x7f404babeac53ccbe4ce372aa08d2f11ec035a81dd5e014e58fd94f7466ec326\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0585b4adf16997a2b8c1f6655803f521ae9af6e1141fce61059796368de5ec91\",\"dweb:/ipfs/QmSa1A1e21f8AxMPu2BLBfvXB24AfRTcLdeuBAnEV7LDbM\"]},\"node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BaseLicenseTemplateUpgradeable.sol\":{\"keccak256\":\"0xf957ad4c86d830ac6db5c8ccecf6673629764a25285fd98d6434d66173294dc3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6723a0f2024f267ed818c183ccc4ef127531fb2d796b4a979b9b136389efc4ff\",\"dweb:/ipfs/QmRRNTmK5wV9Giq4magmkQJhTxzyZSLbNbYqVkrF7Zoxq1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256","indexed":true},{"internalType":"address","name":"licenseTemplate","type":"address","indexed":true},{"internalType":"bytes","name":"licenseTerms","type":"bytes","indexed":false}],"type":"event","name":"LicenseTermsRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"},{"internalType":"uint256","name":"start","type":"uint256"}],"stateMutability":"view","type":"function","name":"getEarlierExpireTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"}],"stateMutability":"view","type":"function","name":"getExpireTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getLicenseTermsURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRoyaltyPolicy","outputs":[{"internalType":"address","name":"royaltyPolicy","type":"address"},{"internalType":"uint32","name":"royaltyPercent","type":"uint32"},{"internalType":"uint256","name":"mintingLicenseFee","type":"uint256"},{"internalType":"address","name":"currencyToken","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isLicenseTransferable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"toJson","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalRegisteredLicenseTerms","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"verifyCompatibleLicenses","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"address","name":"licensee","type":"address"},{"internalType":"address","name":"licensorIpId","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"verifyMintLicenseToken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"childIpId","type":"address"},{"internalType":"address","name":"parentIpId","type":"address"},{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"address","name":"licensee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"verifyRegisterDerivative","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"childIpId","type":"address"},{"internalType":"address[]","name":"parentIpId","type":"address[]"},{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"},{"internalType":"address","name":"childIpOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"verifyRegisterDerivativeForAllParents","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"exists(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the license terms exists, false otherwise."}},"getEarlierExpireTime(uint256[],uint256)":{"params":{"licenseTermsIds":"The IDs of the license terms.","start":"The start time to calculate the expiration time."},"returns":{"_0":"The earliest expiration time."}},"getExpireTime(uint256,uint256)":{"params":{"licenseTermsId":"The ID of the license terms.","start":"The start time."},"returns":{"_0":"The expiration time."}},"getLicenseTermsURI(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"The URI of the license terms."}},"getRoyaltyPolicy(uint256)":{"details":"All License Templates should implement this method. The royalty policy is used to calculate royalties and pay minting license fee. Should return address(0) if the license template does not support a royalty policy or the license term does set RoyaltyPolicy.","params":{"licenseTermsId":"The ID of the license terms."},"returns":{"currencyToken":"The address of the ERC20 token, used for minting license fee and royalties. the currency token will used for pay for license token minting fee and royalties.","mintingLicenseFee":"The fee for minting a license.","royaltyPercent":"The percentage of the royalty.","royaltyPolicy":"The address of the royalty policy specified for the license terms."}},"isLicenseTransferable(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the license terms is transferable, false otherwise."}},"toJson(uint256)":{"details":"the json will be part of metadata as attributes return by tokenURI() license token, hence the json format should follow the common NFT metadata standard.","params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"The JSON string of the license terms."}},"totalRegisteredLicenseTerms()":{"returns":{"_0":"The total number of registered license terms."}},"verifyCompatibleLicenses(uint256[])":{"details":"This function is called by the LicensingModule to verify license compatibility when registering a derivative IP to multiple parent IPs. It ensures that the licenses of all parent IPs are compatible with each other during the registration process.","params":{"licenseTermsIds":"The IDs of the license terms."},"returns":{"_0":"True if the licenses are compatible, false otherwise."}},"verifyMintLicenseToken(uint256,address,address,uint256)":{"details":"the function will be called by the LicensingModule when minting a license token to verify the minting is whether allowed by the license terms.","params":{"amount":"The amount of licenses to mint.","licenseTermsId":"The ID of the license terms.","licensee":"The address of the licensee who will receive the license token.","licensorIpId":"The IP ID of the licensor who attached the license terms minting the license token."},"returns":{"_0":"True if the minting is verified, false otherwise."}},"verifyRegisterDerivative(address,address,uint256,address)":{"params":{"childIpId":"The IP ID of the derivative.","licenseTermsId":"The ID of the license terms.","licensee":"The address of the licensee.","parentIpId":"The IP ID of the parent."},"returns":{"_0":"True if the registration is verified, false otherwise."}},"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":{"details":"This function is called by the LicensingModule to verify licenses for registering a derivative IP to multiple parent IPs. the function will verify the derivative for each parent IP's license and also verify all licenses are compatible.","params":{"childIpId":"The IP ID of the derivative.","childIpOwner":"The address of the derivative IP owner.","licenseTermsIds":"The IDs of the license terms.","parentIpId":"The IP IDs of the parents."},"returns":{"_0":"True if the registration is verified, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"exists(uint256)":{"notice":"Checks if a license terms exists."},"getEarlierExpireTime(uint256[],uint256)":{"notice":"Returns the earliest expiration time among the given license terms."},"getExpireTime(uint256,uint256)":{"notice":"Returns the expiration time of a license terms."},"getLicenseTermsURI(uint256)":{"notice":"Returns the URI of the license terms."},"getMetadataURI()":{"notice":"Returns the URL to the off chain metadata"},"getRoyaltyPolicy(uint256)":{"notice":"Returns the royalty policy of a license terms."},"isLicenseTransferable(uint256)":{"notice":"Checks if a license terms is transferable."},"name()":{"notice":"Returns the name of the license template"},"supportsInterface(bytes4)":{"notice":"IERC165 interface support."},"toJson(uint256)":{"notice":"Converts the license terms to a JSON string which will be part of the metadata of license token."},"totalRegisteredLicenseTerms()":{"notice":"Returns the total number of registered license terms."},"verifyCompatibleLicenses(uint256[])":{"notice":"Verifies if the licenses are compatible."},"verifyMintLicenseToken(uint256,address,address,uint256)":{"notice":"Verifies the minting of a license token."},"verifyRegisterDerivative(address,address,uint256,address)":{"notice":"It verifies whether the derivative's registration is permitted under those terms."},"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":{"notice":"Verifies the registration of a derivative for all parent IPs."}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BaseLicenseTemplateUpgradeable.sol":"BaseLicenseTemplateUpgradeable"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b","urls":["bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609","dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"],"license":"MIT"},"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa","urls":["bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287","dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol":{"keccak256":"0x7f404babeac53ccbe4ce372aa08d2f11ec035a81dd5e014e58fd94f7466ec326","urls":["bzz-raw://0585b4adf16997a2b8c1f6655803f521ae9af6e1141fce61059796368de5ec91","dweb:/ipfs/QmSa1A1e21f8AxMPu2BLBfvXB24AfRTcLdeuBAnEV7LDbM"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BaseLicenseTemplateUpgradeable.sol":{"keccak256":"0xf957ad4c86d830ac6db5c8ccecf6673629764a25285fd98d6434d66173294dc3","urls":["bzz-raw://6723a0f2024f267ed818c183ccc4ef127531fb2d796b4a979b9b136389efc4ff","dweb:/ipfs/QmRRNTmK5wV9Giq4magmkQJhTxzyZSLbNbYqVkrF7Zoxq1"],"license":"BUSL-1.1"}},"version":1},"id":114}