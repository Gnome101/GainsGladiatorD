{"abi":[{"type":"function","name":"checkPermission","inputs":[{"name":"ipAccount","type":"address","internalType":"address"},{"name":"signer","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"func","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"getPermission","inputs":[{"name":"ipAccount","type":"address","internalType":"address"},{"name":"signer","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"func","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"setAllPermissions","inputs":[{"name":"ipAccount","type":"address","internalType":"address"},{"name":"signer","type":"address","internalType":"address"},{"name":"permission","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBatchPermissions","inputs":[{"name":"permissions","type":"tuple[]","internalType":"struct AccessPermission.Permission[]","components":[{"name":"ipAccount","type":"address","internalType":"address"},{"name":"signer","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"func","type":"bytes4","internalType":"bytes4"},{"name":"permission","type":"uint8","internalType":"uint8"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPermission","inputs":[{"name":"ipAccount","type":"address","internalType":"address"},{"name":"signer","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"func","type":"bytes4","internalType":"bytes4"},{"name":"permission","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"PermissionSet","inputs":[{"name":"ipAccountOwner","type":"address","indexed":false,"internalType":"address"},{"name":"ipAccount","type":"address","indexed":true,"internalType":"address"},{"name":"signer","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"func","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"permission","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"checkPermission(address,address,address,bytes4)":"7dfd0ddb","getPermission(address,address,address,bytes4)":"6597c2e5","setAllPermissions(address,address,uint8)":"b3d77147","setBatchPermissions((address,address,address,bytes4,uint8)[])":"13938a8a","setPermission(address,address,address,bytes4,uint8)":"7bac65fd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ipAccountOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"permission\",\"type\":\"uint8\"}],\"name\":\"PermissionSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"}],\"name\":\"checkPermission\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"}],\"name\":\"getPermission\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permission\",\"type\":\"uint8\"}],\"name\":\"setAllPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"internalType\":\"uint8\",\"name\":\"permission\",\"type\":\"uint8\"}],\"internalType\":\"struct AccessPermission.Permission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"name\":\"setBatchPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"internalType\":\"uint8\",\"name\":\"permission\",\"type\":\"uint8\"}],\"name\":\"setPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PermissionSet(address,address,address,address,bytes4,uint8)\":{\"params\":{\"func\":\"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`\",\"ipAccount\":\"The address of the IP account that grants the permission for `signer`\",\"permission\":\"The permission level\",\"signer\":\"The address that can call `to` on behalf of the IP account\",\"to\":\"The address that can be called by the `signer` (currently only modules can be `to`)\"}}},\"kind\":\"dev\",\"methods\":{\"checkPermission(address,address,address,bytes4)\":{\"details\":\"This function checks the permission level for a specific function call. If a specific permission is set, it overrides the general (wildcard) permission. If the current level permission is ABSTAIN, the final permission is determined by the upper level.\",\"params\":{\"func\":\"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`\",\"ipAccount\":\"The address of the IP account that grants the permission for `signer`\",\"signer\":\"The address that can call `to` on behalf of the `ipAccount`\",\"to\":\"The address that can be called by the `signer` (currently only modules can be `to`)\"}},\"getPermission(address,address,address,bytes4)\":{\"params\":{\"func\":\"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`\",\"ipAccount\":\"The address of the IP account that grants the permission for `signer`\",\"signer\":\"The address that can call `to` on behalf of the `ipAccount`\",\"to\":\"The address that can be called by the `signer` (currently only modules can be `to`)\"},\"returns\":{\"_0\":\"permission The current permission level for the function call on `to` by the `signer` for `ipAccount`\"}},\"setAllPermissions(address,address,uint8)\":{\"params\":{\"ipAccount\":\"The address of the IP account that grants the permission for `signer`.\",\"permission\":\"The new permission.\",\"signer\":\"The address of the signer receiving the permissions.\"}},\"setBatchPermissions((address,address,address,bytes4,uint8)[])\":{\"details\":\"This function allows setting multiple permissions at once. Pausable.\",\"params\":{\"permissions\":\"An array of `Permission` structs, each representing the permission to be set.\"}},\"setPermission(address,address,address,bytes4,uint8)\":{\"details\":\"Each policy is represented as a mapping from an IP account address to a signer address to a recipient address to a function selector to a permission level. The permission level can be 0 (ABSTAIN), 1 (ALLOW), or 2 (DENY).By default, all policies are set to 0 (ABSTAIN), which means that the permission is not set. The owner of ipAccount by default has all permission. address(0) => wildcard bytes4(0) => wildcard Specific permission overrides wildcard permission.\",\"params\":{\"func\":\"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`\",\"ipAccount\":\"The address of the IP account that grants the permission for `signer`\",\"permission\":\"The new permission level\",\"signer\":\"The address that can call `to` on behalf of the `ipAccount`\",\"to\":\"The address that can be called by the `signer` (currently only modules can be `to`)\"}}},\"version\":1},\"userdoc\":{\"events\":{\"PermissionSet(address,address,address,address,bytes4,uint8)\":{\"notice\":\"Emitted when a permission is set.\"}},\"kind\":\"user\",\"methods\":{\"checkPermission(address,address,address,bytes4)\":{\"notice\":\"Checks the permission level for a specific function call. Reverts if permission is not granted. Otherwise, the function is a noop.\"},\"getPermission(address,address,address,bytes4)\":{\"notice\":\"Returns the permission level for a specific function call.\"},\"setAllPermissions(address,address,uint8)\":{\"notice\":\"Sets permission to a signer for all functions across all modules.\"},\"setBatchPermissions((address,address,address,bytes4,uint8)[])\":{\"notice\":\"Sets a batch of permissions in a single transaction.\"},\"setPermission(address,address,address,bytes4,uint8)\":{\"notice\":\"Sets the permission for a specific function call\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/access/IAccessController.sol\":\"IAccessController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/access/IAccessController.sol\":{\"keccak256\":\"0xa0e54b5b56b010121b3a8da539b1bcff1ce2b3860802fb4fb0e3a41faab84029\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa8fda631272e7aaffe3150135f25693d150177ee9ee85eb0bc8b3b50f7fe0fb\",\"dweb:/ipfs/QmUskSRJ4453dt1G8vzBiTd1sByqMmAfSeRX7zAGHHvvKh\"]},\"node_modules/@story-protocol/protocol-core/contracts/lib/AccessPermission.sol\":{\"keccak256\":\"0x9f80b7d38c30ba603c836cc06543765abc629a2f0156a4d0d01b9c862d48e03c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://61bfc525605800ca91bbee25305af032920f14c790a1664fbefe4049355a19de\",\"dweb:/ipfs/QmVVHKqW23EsgLZsPHXzkxEWuCQT9BeKCULDqTew8K418y\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"ipAccountOwner","type":"address","indexed":false},{"internalType":"address","name":"ipAccount","type":"address","indexed":true},{"internalType":"address","name":"signer","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"bytes4","name":"func","type":"bytes4","indexed":false},{"internalType":"uint8","name":"permission","type":"uint8","indexed":false}],"type":"event","name":"PermissionSet","anonymous":false},{"inputs":[{"internalType":"address","name":"ipAccount","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes4","name":"func","type":"bytes4"}],"stateMutability":"view","type":"function","name":"checkPermission"},{"inputs":[{"internalType":"address","name":"ipAccount","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes4","name":"func","type":"bytes4"}],"stateMutability":"view","type":"function","name":"getPermission","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"ipAccount","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"uint8","name":"permission","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setAllPermissions"},{"inputs":[{"internalType":"struct AccessPermission.Permission[]","name":"permissions","type":"tuple[]","components":[{"internalType":"address","name":"ipAccount","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes4","name":"func","type":"bytes4"},{"internalType":"uint8","name":"permission","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"setBatchPermissions"},{"inputs":[{"internalType":"address","name":"ipAccount","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes4","name":"func","type":"bytes4"},{"internalType":"uint8","name":"permission","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setPermission"}],"devdoc":{"kind":"dev","methods":{"checkPermission(address,address,address,bytes4)":{"details":"This function checks the permission level for a specific function call. If a specific permission is set, it overrides the general (wildcard) permission. If the current level permission is ABSTAIN, the final permission is determined by the upper level.","params":{"func":"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`","ipAccount":"The address of the IP account that grants the permission for `signer`","signer":"The address that can call `to` on behalf of the `ipAccount`","to":"The address that can be called by the `signer` (currently only modules can be `to`)"}},"getPermission(address,address,address,bytes4)":{"params":{"func":"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`","ipAccount":"The address of the IP account that grants the permission for `signer`","signer":"The address that can call `to` on behalf of the `ipAccount`","to":"The address that can be called by the `signer` (currently only modules can be `to`)"},"returns":{"_0":"permission The current permission level for the function call on `to` by the `signer` for `ipAccount`"}},"setAllPermissions(address,address,uint8)":{"params":{"ipAccount":"The address of the IP account that grants the permission for `signer`.","permission":"The new permission.","signer":"The address of the signer receiving the permissions."}},"setBatchPermissions((address,address,address,bytes4,uint8)[])":{"details":"This function allows setting multiple permissions at once. Pausable.","params":{"permissions":"An array of `Permission` structs, each representing the permission to be set."}},"setPermission(address,address,address,bytes4,uint8)":{"details":"Each policy is represented as a mapping from an IP account address to a signer address to a recipient address to a function selector to a permission level. The permission level can be 0 (ABSTAIN), 1 (ALLOW), or 2 (DENY).By default, all policies are set to 0 (ABSTAIN), which means that the permission is not set. The owner of ipAccount by default has all permission. address(0) => wildcard bytes4(0) => wildcard Specific permission overrides wildcard permission.","params":{"func":"The function selector of `to` that can be called by the `signer` on behalf of the `ipAccount`","ipAccount":"The address of the IP account that grants the permission for `signer`","permission":"The new permission level","signer":"The address that can call `to` on behalf of the `ipAccount`","to":"The address that can be called by the `signer` (currently only modules can be `to`)"}}},"version":1},"userdoc":{"kind":"user","methods":{"checkPermission(address,address,address,bytes4)":{"notice":"Checks the permission level for a specific function call. Reverts if permission is not granted. Otherwise, the function is a noop."},"getPermission(address,address,address,bytes4)":{"notice":"Returns the permission level for a specific function call."},"setAllPermissions(address,address,uint8)":{"notice":"Sets permission to a signer for all functions across all modules."},"setBatchPermissions((address,address,address,bytes4,uint8)[])":{"notice":"Sets a batch of permissions in a single transaction."},"setPermission(address,address,address,bytes4,uint8)":{"notice":"Sets the permission for a specific function call"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/access/IAccessController.sol":"IAccessController"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/access/IAccessController.sol":{"keccak256":"0xa0e54b5b56b010121b3a8da539b1bcff1ce2b3860802fb4fb0e3a41faab84029","urls":["bzz-raw://fa8fda631272e7aaffe3150135f25693d150177ee9ee85eb0bc8b3b50f7fe0fb","dweb:/ipfs/QmUskSRJ4453dt1G8vzBiTd1sByqMmAfSeRX7zAGHHvvKh"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/lib/AccessPermission.sol":{"keccak256":"0x9f80b7d38c30ba603c836cc06543765abc629a2f0156a4d0d01b9c862d48e03c","urls":["bzz-raw://61bfc525605800ca91bbee25305af032920f14c790a1664fbefe4049355a19de","dweb:/ipfs/QmVVHKqW23EsgLZsPHXzkxEWuCQT9BeKCULDqTew8K418y"],"license":"BUSL-1.1"}},"version":1},"id":85}