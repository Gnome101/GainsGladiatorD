{"abi":[{"type":"function","name":"addGroupMember","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"containsIp","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"ipId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getGroupMembers","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"startIndex","type":"uint256","internalType":"uint256"},{"name":"size","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getGroupRewardPool","inputs":[{"name":"groupId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isRegisteredGroup","inputs":[{"name":"groupId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerGroup","inputs":[{"name":"groupNft","type":"address","internalType":"address"},{"name":"groupNftId","type":"uint256","internalType":"uint256"},{"name":"rewardPool","type":"address","internalType":"address"}],"outputs":[{"name":"groupId","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeGroupMember","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalMembers","inputs":[{"name":"groupId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"whitelistGroupRewardPool","inputs":[{"name":"rewardPool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addGroupMember(address,address[])":"4094f4ed","containsIp(address,address)":"7d294b40","getGroupMembers(address,uint256,uint256)":"be68d9d7","getGroupRewardPool(address)":"30d63280","isRegisteredGroup(address)":"51eee276","registerGroup(address,uint256,address)":"43aeb836","removeGroupMember(address,address[])":"81fdafa0","totalMembers(address)":"a32a054e","whitelistGroupRewardPool(address)":"c1c9faa0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"addGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"}],\"name\":\"containsIp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getGroupMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"}],\"name\":\"getGroupRewardPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"}],\"name\":\"isRegisteredGroup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupNft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupNftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardPool\",\"type\":\"address\"}],\"name\":\"registerGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"removeGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"}],\"name\":\"totalMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardPool\",\"type\":\"address\"}],\"name\":\"whitelistGroupRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addGroupMember(address,address[])\":{\"params\":{\"groupId\":\"The address of the Group IPA.\",\"ipIds\":\"The addresses of the IPs to add to the Group IPA.\"}},\"containsIp(address,address)\":{\"params\":{\"groupId\":\"The address of the Group IPA.\",\"ipId\":\"The address of the IP.\"},\"returns\":{\"_0\":\"isMember Whether the IP is a member of the Group IPA.\"}},\"getGroupMembers(address,uint256,uint256)\":{\"params\":{\"groupId\":\"The address of the Group IPA.\",\"size\":\"The size of the group members to retrieve\",\"startIndex\":\"The start index of the group members to retrieve\"},\"returns\":{\"_0\":\"groupMembers The addresses of the group members\"}},\"getGroupRewardPool(address)\":{\"params\":{\"groupId\":\"The address of the Group IPA.\"},\"returns\":{\"_0\":\"groupPool The address of the group policy.\"}},\"isRegisteredGroup(address)\":{\"params\":{\"groupId\":\"The address of the Group IPA.\"},\"returns\":{\"_0\":\"isRegistered Whether the Group IPA was registered into the protocol.\"}},\"registerGroup(address,uint256,address)\":{\"params\":{\"groupNft\":\"The address of the group IPA\",\"groupNftId\":\"The id of the group IPA\",\"rewardPool\":\"The address of the group reward pool\"},\"returns\":{\"groupId\":\"The address of the newly registered Group IPA.\"}},\"removeGroupMember(address,address[])\":{\"params\":{\"groupId\":\"The address of the Group IPA.\",\"ipIds\":\"The addresses of the IPs to remove from the Group IPA.\"}},\"totalMembers(address)\":{\"params\":{\"groupId\":\"The address of the Group IPA.\"},\"returns\":{\"_0\":\"totalMembers The total number of members in the Group IPA.\"}},\"whitelistGroupRewardPool(address)\":{\"params\":{\"rewardPool\":\"The address of the group reward pool\"}}},\"title\":\"Interface for Group IPA  Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addGroupMember(address,address[])\":{\"notice\":\"Adds a member to a Group IPA\"},\"containsIp(address,address)\":{\"notice\":\"Checks whether an IP is a member of a Group IPA\"},\"getGroupMembers(address,uint256,uint256)\":{\"notice\":\"Retrieves the group members for a Group IPA\"},\"getGroupRewardPool(address)\":{\"notice\":\"Retrieves the group policy for a Group IPA\"},\"isRegisteredGroup(address)\":{\"notice\":\"Checks whether a group IPA was registered based on its ID.\"},\"registerGroup(address,uint256,address)\":{\"notice\":\"Registers a Group IPA\"},\"removeGroupMember(address,address[])\":{\"notice\":\"Removes a member from a Group IPA\"},\"totalMembers(address)\":{\"notice\":\"Retrieves the total number of members in a Group IPA\"},\"whitelistGroupRewardPool(address)\":{\"notice\":\"Whitelists a group reward pool\"}},\"notice\":\"This interface manages the registration and tracking of Group IPA\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IGroupIPAssetRegistry.sol\":\"IGroupIPAssetRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IGroupIPAssetRegistry.sol\":{\"keccak256\":\"0x57f1d4c403729ddf768bb8fb0d3a4fac642d60549c89e00be67e99e2c9ad8c39\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e61cd57662b8d246f2f231f33bbf59390fd6f83d4a3d81f1a3ea09429d79f87e\",\"dweb:/ipfs/QmeFZ561YK8zDoV4LoQ61a1aTtJfNXJJLs452CguLuEjZd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addGroupMember"},{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"address","name":"ipId","type":"address"}],"stateMutability":"view","type":"function","name":"containsIp","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"size","type":"uint256"}],"stateMutability":"view","type":"function","name":"getGroupMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"groupId","type":"address"}],"stateMutability":"view","type":"function","name":"getGroupRewardPool","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"groupId","type":"address"}],"stateMutability":"view","type":"function","name":"isRegisteredGroup","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"groupNft","type":"address"},{"internalType":"uint256","name":"groupNftId","type":"uint256"},{"internalType":"address","name":"rewardPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerGroup","outputs":[{"internalType":"address","name":"groupId","type":"address"}]},{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"removeGroupMember"},{"inputs":[{"internalType":"address","name":"groupId","type":"address"}],"stateMutability":"view","type":"function","name":"totalMembers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"rewardPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"whitelistGroupRewardPool"}],"devdoc":{"kind":"dev","methods":{"addGroupMember(address,address[])":{"params":{"groupId":"The address of the Group IPA.","ipIds":"The addresses of the IPs to add to the Group IPA."}},"containsIp(address,address)":{"params":{"groupId":"The address of the Group IPA.","ipId":"The address of the IP."},"returns":{"_0":"isMember Whether the IP is a member of the Group IPA."}},"getGroupMembers(address,uint256,uint256)":{"params":{"groupId":"The address of the Group IPA.","size":"The size of the group members to retrieve","startIndex":"The start index of the group members to retrieve"},"returns":{"_0":"groupMembers The addresses of the group members"}},"getGroupRewardPool(address)":{"params":{"groupId":"The address of the Group IPA."},"returns":{"_0":"groupPool The address of the group policy."}},"isRegisteredGroup(address)":{"params":{"groupId":"The address of the Group IPA."},"returns":{"_0":"isRegistered Whether the Group IPA was registered into the protocol."}},"registerGroup(address,uint256,address)":{"params":{"groupNft":"The address of the group IPA","groupNftId":"The id of the group IPA","rewardPool":"The address of the group reward pool"},"returns":{"groupId":"The address of the newly registered Group IPA."}},"removeGroupMember(address,address[])":{"params":{"groupId":"The address of the Group IPA.","ipIds":"The addresses of the IPs to remove from the Group IPA."}},"totalMembers(address)":{"params":{"groupId":"The address of the Group IPA."},"returns":{"_0":"totalMembers The total number of members in the Group IPA."}},"whitelistGroupRewardPool(address)":{"params":{"rewardPool":"The address of the group reward pool"}}},"version":1},"userdoc":{"kind":"user","methods":{"addGroupMember(address,address[])":{"notice":"Adds a member to a Group IPA"},"containsIp(address,address)":{"notice":"Checks whether an IP is a member of a Group IPA"},"getGroupMembers(address,uint256,uint256)":{"notice":"Retrieves the group members for a Group IPA"},"getGroupRewardPool(address)":{"notice":"Retrieves the group policy for a Group IPA"},"isRegisteredGroup(address)":{"notice":"Checks whether a group IPA was registered based on its ID."},"registerGroup(address,uint256,address)":{"notice":"Registers a Group IPA"},"removeGroupMember(address,address[])":{"notice":"Removes a member from a Group IPA"},"totalMembers(address)":{"notice":"Retrieves the total number of members in a Group IPA"},"whitelistGroupRewardPool(address)":{"notice":"Whitelists a group reward pool"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IGroupIPAssetRegistry.sol":"IGroupIPAssetRegistry"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IGroupIPAssetRegistry.sol":{"keccak256":"0x57f1d4c403729ddf768bb8fb0d3a4fac642d60549c89e00be67e99e2c9ad8c39","urls":["bzz-raw://e61cd57662b8d246f2f231f33bbf59390fd6f83d4a3d81f1a3ea09429d79f87e","dweb:/ipfs/QmeFZ561YK8zDoV4LoQ61a1aTtJfNXJJLs452CguLuEjZd"],"license":"BUSL-1.1"}},"version":1},"id":100}