{"abi":[{"type":"function","name":"addIp","inputs":[{"name":"groupIpId","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimReward","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getClaimableReward","inputs":[{"name":"groupId","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerGroup","inputs":[{"name":"groupPool","type":"address","internalType":"address"}],"outputs":[{"name":"groupId","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeIp","inputs":[{"name":"groupIpId","type":"address","internalType":"address"},{"name":"ipIds","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"whitelistGroupRewardPool","inputs":[{"name":"rewardPool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddedIpToGroup","inputs":[{"name":"groupId","type":"address","indexed":true,"internalType":"address"},{"name":"ipIds","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"ClaimedReward","inputs":[{"name":"groupId","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"ipId","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"amount","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"IPGroupRegistered","inputs":[{"name":"groupId","type":"address","indexed":true,"internalType":"address"},{"name":"groupPool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RemovedIpFromGroup","inputs":[{"name":"groupId","type":"address","indexed":true,"internalType":"address"},{"name":"ipIds","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addIp(address,address[])":"db617431","claimReward(address,address,address[])":"7c7d4809","getClaimableReward(address,address,address[])":"17bcdfb4","name()":"06fdde03","registerGroup(address)":"9adb6c6a","removeIp(address,address[])":"88e5a64b","supportsInterface(bytes4)":"01ffc9a7","whitelistGroupRewardPool(address)":"c1c9faa0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"AddedIpToGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"ipId\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"ClaimedReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"groupPool\",\"type\":\"address\"}],\"name\":\"IPGroupRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"RemovedIpFromGroup\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupIpId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"addIp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"getClaimableReward\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupPool\",\"type\":\"address\"}],\"name\":\"registerGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"groupId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"groupIpId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ipIds\",\"type\":\"address[]\"}],\"name\":\"removeIp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardPool\",\"type\":\"address\"}],\"name\":\"whitelistGroupRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AddedIpToGroup(address,address[])\":{\"params\":{\"groupId\":\"The address of the group.\",\"ipIds\":\"The IP ID.\"}},\"ClaimedReward(address,address,address[],uint256[])\":{\"params\":{\"amount\":\"The amount of reward.\",\"groupId\":\"The address of the group.\",\"ipId\":\"The IP ID.\",\"token\":\"The address of the token.\"}},\"IPGroupRegistered(address,address)\":{\"params\":{\"groupId\":\"The address of the group.\",\"groupPool\":\"The address of the group pool.\"}},\"RemovedIpFromGroup(address,address[])\":{\"params\":{\"groupId\":\"The address of the group.\",\"ipIds\":\"The IP ID.\"}}},\"kind\":\"dev\",\"methods\":{\"addIp(address,address[])\":{\"params\":{\"groupIpId\":\"The address of the group IP.\",\"ipIds\":\"The IP IDs.\"}},\"claimReward(address,address,address[])\":{\"params\":{\"groupId\":\"The address of the group.\",\"ipIds\":\"The IP IDs.\",\"token\":\"The address of the token.\"}},\"getClaimableReward(address,address,address[])\":{\"params\":{\"groupId\":\"The address of the group.\",\"ipIds\":\"The IP IDs.\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The rewards for each IP.\"}},\"registerGroup(address)\":{\"params\":{\"groupPool\":\"The address of the group pool.\"},\"returns\":{\"groupId\":\"The address of the newly registered Group IPA.\"}},\"removeIp(address,address[])\":{\"params\":{\"groupIpId\":\"The address of the group IP.\",\"ipIds\":\"The IP IDs.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"whitelistGroupRewardPool(address)\":{\"params\":{\"rewardPool\":\"The address of the group reward pool.\"}}},\"title\":\"IGroupingModule\",\"version\":1},\"userdoc\":{\"events\":{\"AddedIpToGroup(address,address[])\":{\"notice\":\"Emitted when added ip to group.\"},\"ClaimedReward(address,address,address[],uint256[])\":{\"notice\":\"Emitted when claimed reward.\"},\"IPGroupRegistered(address,address)\":{\"notice\":\"Emitted when a group is registered.\"},\"RemovedIpFromGroup(address,address[])\":{\"notice\":\"Emitted when removed ip from group.\"}},\"kind\":\"user\",\"methods\":{\"addIp(address,address[])\":{\"notice\":\"Adds IP to group. the function must be called by the Group IP owner or an authorized operator.\"},\"claimReward(address,address,address[])\":{\"notice\":\"Claims reward.\"},\"getClaimableReward(address,address,address[])\":{\"notice\":\"Returns the available reward for each IP in the group.\"},\"name()\":{\"notice\":\"Returns the string identifier associated with the module.\"},\"registerGroup(address)\":{\"notice\":\"Registers a Group IPA.\"},\"removeIp(address,address[])\":{\"notice\":\"Removes IP from group. the function must be called by the Group IP owner or an authorized operator.\"},\"whitelistGroupRewardPool(address)\":{\"notice\":\"Whitelists a group reward pool.\"}},\"notice\":\"This interface defines the entry point for users to manage group in the Story Protocol. It defines the workflow of grouping actions and coordinates among all grouping components. The Grouping Module is responsible for adding ip to group, removing ip from group and claiming reward.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/grouping/IGroupingModule.sol\":\"IGroupingModule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol\":{\"keccak256\":\"0xe6b5a6812eeaf90aab7c016aaa8d3efdccedc95059badc40cca5eb23f0f16c50\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ddb19461c0a36090307660badc772eaf6d3cfbad44d82b6bd47d810aaaf4c12c\",\"dweb:/ipfs/QmeTeb8xya718vYAQA8Cb5zRRMzGuLbT5HVP95sv34bMkE\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/grouping/IGroupingModule.sol\":{\"keccak256\":\"0x5f7e7486eb0496313161a5fe701389134a8178baf74d780476f394d82dbeb8bb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ad7f3877154af067e42cc9e14dd357b6bb9f2aabd2a3e158c378c5d1514ba4dc\",\"dweb:/ipfs/QmUupyhhCt5qKrYapL99fUm59rYPpiL1ZYtbMbaLszCawg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"groupId","type":"address","indexed":true},{"internalType":"address[]","name":"ipIds","type":"address[]","indexed":false}],"type":"event","name":"AddedIpToGroup","anonymous":false},{"inputs":[{"internalType":"address","name":"groupId","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address[]","name":"ipId","type":"address[]","indexed":false},{"internalType":"uint256[]","name":"amount","type":"uint256[]","indexed":false}],"type":"event","name":"ClaimedReward","anonymous":false},{"inputs":[{"internalType":"address","name":"groupId","type":"address","indexed":true},{"internalType":"address","name":"groupPool","type":"address","indexed":true}],"type":"event","name":"IPGroupRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"groupId","type":"address","indexed":true},{"internalType":"address[]","name":"ipIds","type":"address[]","indexed":false}],"type":"event","name":"RemovedIpFromGroup","anonymous":false},{"inputs":[{"internalType":"address","name":"groupIpId","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addIp"},{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimReward"},{"inputs":[{"internalType":"address","name":"groupId","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"view","type":"function","name":"getClaimableReward","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"groupPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerGroup","outputs":[{"internalType":"address","name":"groupId","type":"address"}]},{"inputs":[{"internalType":"address","name":"groupIpId","type":"address"},{"internalType":"address[]","name":"ipIds","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"removeIp"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"rewardPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"whitelistGroupRewardPool"}],"devdoc":{"kind":"dev","methods":{"addIp(address,address[])":{"params":{"groupIpId":"The address of the group IP.","ipIds":"The IP IDs."}},"claimReward(address,address,address[])":{"params":{"groupId":"The address of the group.","ipIds":"The IP IDs.","token":"The address of the token."}},"getClaimableReward(address,address,address[])":{"params":{"groupId":"The address of the group.","ipIds":"The IP IDs.","token":"The address of the token."},"returns":{"_0":"The rewards for each IP."}},"registerGroup(address)":{"params":{"groupPool":"The address of the group pool."},"returns":{"groupId":"The address of the newly registered Group IPA."}},"removeIp(address,address[])":{"params":{"groupIpId":"The address of the group IP.","ipIds":"The IP IDs."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"whitelistGroupRewardPool(address)":{"params":{"rewardPool":"The address of the group reward pool."}}},"version":1},"userdoc":{"kind":"user","methods":{"addIp(address,address[])":{"notice":"Adds IP to group. the function must be called by the Group IP owner or an authorized operator."},"claimReward(address,address,address[])":{"notice":"Claims reward."},"getClaimableReward(address,address,address[])":{"notice":"Returns the available reward for each IP in the group."},"name()":{"notice":"Returns the string identifier associated with the module."},"registerGroup(address)":{"notice":"Registers a Group IPA."},"removeIp(address,address[])":{"notice":"Removes IP from group. the function must be called by the Group IP owner or an authorized operator."},"whitelistGroupRewardPool(address)":{"notice":"Whitelists a group reward pool."}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/grouping/IGroupingModule.sol":"IGroupingModule"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol":{"keccak256":"0xe6b5a6812eeaf90aab7c016aaa8d3efdccedc95059badc40cca5eb23f0f16c50","urls":["bzz-raw://ddb19461c0a36090307660badc772eaf6d3cfbad44d82b6bd47d810aaaf4c12c","dweb:/ipfs/QmeTeb8xya718vYAQA8Cb5zRRMzGuLbT5HVP95sv34bMkE"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/grouping/IGroupingModule.sol":{"keccak256":"0x5f7e7486eb0496313161a5fe701389134a8178baf74d780476f394d82dbeb8bb","urls":["bzz-raw://ad7f3877154af067e42cc9e14dd357b6bb9f2aabd2a3e158c378c5d1514ba4dc","dweb:/ipfs/QmUupyhhCt5qKrYapL99fUm59rYPpiL1ZYtbMbaLszCawg"],"license":"BUSL-1.1"}},"version":1},"id":89}