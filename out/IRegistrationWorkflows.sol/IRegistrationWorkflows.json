{"abi":[{"type":"function","name":"createCollection","inputs":[{"name":"spgNftInitParams","type":"tuple","internalType":"struct ISPGNFT.InitParams","components":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"baseURI","type":"string","internalType":"string"},{"name":"maxSupply","type":"uint32","internalType":"uint32"},{"name":"mintFee","type":"uint256","internalType":"uint256"},{"name":"mintFeeToken","type":"address","internalType":"address"},{"name":"mintFeeRecipient","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"mintOpen","type":"bool","internalType":"bool"},{"name":"isPublicMinting","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"spgNftContract","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"mintAndRegisterIp","inputs":[{"name":"spgNftContract","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"ipMetadata","type":"tuple","internalType":"struct WorkflowStructs.IPMetadata","components":[{"name":"ipMetadataURI","type":"string","internalType":"string"},{"name":"ipMetadataHash","type":"bytes32","internalType":"bytes32"},{"name":"nftMetadataURI","type":"string","internalType":"string"},{"name":"nftMetadataHash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"ipId","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerIp","inputs":[{"name":"nftContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"ipMetadata","type":"tuple","internalType":"struct WorkflowStructs.IPMetadata","components":[{"name":"ipMetadataURI","type":"string","internalType":"string"},{"name":"ipMetadataHash","type":"bytes32","internalType":"bytes32"},{"name":"nftMetadataURI","type":"string","internalType":"string"},{"name":"nftMetadataHash","type":"bytes32","internalType":"bytes32"}]},{"name":"sigMetadata","type":"tuple","internalType":"struct WorkflowStructs.SignatureData","components":[{"name":"signer","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"ipId","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"event","name":"CollectionCreated","inputs":[{"name":"spgNftContract","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createCollection((string,string,string,uint32,uint256,address,address,address,bool,bool))":"0f2a254d","mintAndRegisterIp(address,address,(string,bytes32,string,bytes32))":"a392aa86","registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":"4e8c4624"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mintFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mintOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPublicMinting\",\"type\":\"bool\"}],\"internalType\":\"struct ISPGNFT.InitParams\",\"name\":\"spgNftInitParams\",\"type\":\"tuple\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"ipMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ipMetadataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"nftMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"nftMetadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct WorkflowStructs.IPMetadata\",\"name\":\"ipMetadata\",\"type\":\"tuple\"}],\"name\":\"mintAndRegisterIp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"ipMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ipMetadataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"nftMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"nftMetadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct WorkflowStructs.IPMetadata\",\"name\":\"ipMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct WorkflowStructs.SignatureData\",\"name\":\"sigMetadata\",\"type\":\"tuple\"}],\"name\":\"registerIp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CollectionCreated(address)\":{\"params\":{\"spgNftContract\":\"The address of the SPGNFT collection.\"}}},\"kind\":\"dev\",\"methods\":{\"createCollection((string,string,string,uint32,uint256,address,address,address,bool,bool))\":{\"params\":{\"spgNftInitParams\":\"The init params for the SPGNFT collection. See {ISPGNFT-InitParams}.\"},\"returns\":{\"spgNftContract\":\"The address of the newly created SPGNFT collection.\"}},\"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32))\":{\"details\":\"Requires caller to have the minter role or the SPG NFT to allow public minting.\",\"params\":{\"ipMetadata\":\"OPTIONAL. The desired metadata for the newly minted NFT and registered IP.\",\"recipient\":\"The address of the recipient of the minted NFT.\",\"spgNftContract\":\"The address of the SPGNFT collection.\"},\"returns\":{\"ipId\":\"The ID of the registered IP.\",\"tokenId\":\"The ID of the newly minted NFT.\"}},\"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))\":{\"params\":{\"ipMetadata\":\"OPTIONAL. The desired metadata for the newly registered IP.\",\"nftContract\":\"The address of the NFT collection.\",\"sigMetadata\":\"OPTIONAL. Signature data for setAll (metadata) for the IP via the Core Metadata Module.\",\"tokenId\":\"The ID of the NFT.\"},\"returns\":{\"ipId\":\"The ID of the newly registered IP.\"}}},\"title\":\"Registration Workflows Interface\",\"version\":1},\"userdoc\":{\"events\":{\"CollectionCreated(address)\":{\"notice\":\"Event emitted when a new NFT collection is created.\"}},\"kind\":\"user\",\"methods\":{\"createCollection((string,string,string,uint32,uint256,address,address,address,bool,bool))\":{\"notice\":\"Creates a new NFT collection to be used by SPG.\"},\"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32))\":{\"notice\":\"Mint an NFT from a SPGNFT collection and register it with metadata as an IP.\"},\"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))\":{\"notice\":\"Registers an NFT as IP with metadata.\"}},\"notice\":\"Interface for IP Registration Workflows.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol\":\"IRegistrationWorkflows\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/ISPGNFT.sol\":{\"keccak256\":\"0x0b9262379ce0e3b153790ea38d47cc8ed1bfe0098b0b6a35be3e93c840b0cbaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf44577ef1194fbc8a70f0c537a32e05cbadce08935ec8132703e1a8750079\",\"dweb:/ipfs/QmNxHNtaMWcqRLJwT6cSs4BuzMPJEhtuY7HJ2bib4bGANA\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol\":{\"keccak256\":\"0x3af853c01c860e75c52ca5b20cc456535dc3f80e751abbb0282b104a3e3ee9dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d2dbb5e2ecf5da3ae6d97e653efbbc976018e84911bc89034c7542460521eb\",\"dweb:/ipfs/QmZynd8c5WHy2q8NpXkdX2713eqJj6SE7XJNw4naF7S83k\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/lib/WorkflowStructs.sol\":{\"keccak256\":\"0x19db3c4902b1b2939e26ad9f911344082f768be5bbb041bcbea10ec2996faa89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6334e34ca609fa7dc1dcf168b348e2fe322a229babd6f40e2eeced4a5f96e36\",\"dweb:/ipfs/Qmc8Ktn6a79UU2fc8kk3tsA9tgcWxqzpggh4C3UbFSqcWf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"spgNftContract","type":"address","indexed":true}],"type":"event","name":"CollectionCreated","anonymous":false},{"inputs":[{"internalType":"struct ISPGNFT.InitParams","name":"spgNftInitParams","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"uint32","name":"maxSupply","type":"uint32"},{"internalType":"uint256","name":"mintFee","type":"uint256"},{"internalType":"address","name":"mintFeeToken","type":"address"},{"internalType":"address","name":"mintFeeRecipient","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"mintOpen","type":"bool"},{"internalType":"bool","name":"isPublicMinting","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"createCollection","outputs":[{"internalType":"address","name":"spgNftContract","type":"address"}]},{"inputs":[{"internalType":"address","name":"spgNftContract","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct WorkflowStructs.IPMetadata","name":"ipMetadata","type":"tuple","components":[{"internalType":"string","name":"ipMetadataURI","type":"string"},{"internalType":"bytes32","name":"ipMetadataHash","type":"bytes32"},{"internalType":"string","name":"nftMetadataURI","type":"string"},{"internalType":"bytes32","name":"nftMetadataHash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"mintAndRegisterIp","outputs":[{"internalType":"address","name":"ipId","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"struct WorkflowStructs.IPMetadata","name":"ipMetadata","type":"tuple","components":[{"internalType":"string","name":"ipMetadataURI","type":"string"},{"internalType":"bytes32","name":"ipMetadataHash","type":"bytes32"},{"internalType":"string","name":"nftMetadataURI","type":"string"},{"internalType":"bytes32","name":"nftMetadataHash","type":"bytes32"}]},{"internalType":"struct WorkflowStructs.SignatureData","name":"sigMetadata","type":"tuple","components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"registerIp","outputs":[{"internalType":"address","name":"ipId","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createCollection((string,string,string,uint32,uint256,address,address,address,bool,bool))":{"params":{"spgNftInitParams":"The init params for the SPGNFT collection. See {ISPGNFT-InitParams}."},"returns":{"spgNftContract":"The address of the newly created SPGNFT collection."}},"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32))":{"details":"Requires caller to have the minter role or the SPG NFT to allow public minting.","params":{"ipMetadata":"OPTIONAL. The desired metadata for the newly minted NFT and registered IP.","recipient":"The address of the recipient of the minted NFT.","spgNftContract":"The address of the SPGNFT collection."},"returns":{"ipId":"The ID of the registered IP.","tokenId":"The ID of the newly minted NFT."}},"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":{"params":{"ipMetadata":"OPTIONAL. The desired metadata for the newly registered IP.","nftContract":"The address of the NFT collection.","sigMetadata":"OPTIONAL. Signature data for setAll (metadata) for the IP via the Core Metadata Module.","tokenId":"The ID of the NFT."},"returns":{"ipId":"The ID of the newly registered IP."}}},"version":1},"userdoc":{"kind":"user","methods":{"createCollection((string,string,string,uint32,uint256,address,address,address,bool,bool))":{"notice":"Creates a new NFT collection to be used by SPG."},"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32))":{"notice":"Mint an NFT from a SPGNFT collection and register it with metadata as an IP."},"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":{"notice":"Registers an NFT as IP with metadata."}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol":"IRegistrationWorkflows"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/access/IAccessControl.sol":{"keccak256":"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606","urls":["bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1","dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261","urls":["bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11","dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/ISPGNFT.sol":{"keccak256":"0x0b9262379ce0e3b153790ea38d47cc8ed1bfe0098b0b6a35be3e93c840b0cbaf","urls":["bzz-raw://d4bf44577ef1194fbc8a70f0c537a32e05cbadce08935ec8132703e1a8750079","dweb:/ipfs/QmNxHNtaMWcqRLJwT6cSs4BuzMPJEhtuY7HJ2bib4bGANA"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol":{"keccak256":"0x3af853c01c860e75c52ca5b20cc456535dc3f80e751abbb0282b104a3e3ee9dc","urls":["bzz-raw://35d2dbb5e2ecf5da3ae6d97e653efbbc976018e84911bc89034c7542460521eb","dweb:/ipfs/QmZynd8c5WHy2q8NpXkdX2713eqJj6SE7XJNw4naF7S83k"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/lib/WorkflowStructs.sol":{"keccak256":"0x19db3c4902b1b2939e26ad9f911344082f768be5bbb041bcbea10ec2996faa89","urls":["bzz-raw://e6334e34ca609fa7dc1dcf168b348e2fe322a229babd6f40e2eeced4a5f96e36","dweb:/ipfs/Qmc8Ktn6a79UU2fc8kk3tsA9tgcWxqzpggh4C3UbFSqcWf"],"license":"MIT"}},"version":1},"id":128}