{"abi":[{"type":"function","name":"getPolicyRoyaltyStack","inputs":[{"name":"ipId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getPolicyRtsRequiredToLink","inputs":[{"name":"ipId","type":"address","internalType":"address"},{"name":"licensePercent","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"onLicenseMinting","inputs":[{"name":"ipId","type":"address","internalType":"address"},{"name":"licensePercent","type":"uint32","internalType":"uint32"},{"name":"externalData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onLinkToParents","inputs":[{"name":"ipId","type":"address","internalType":"address"},{"name":"parentIpIds","type":"address[]","internalType":"address[]"},{"name":"licenseRoyaltyPolicies","type":"address[]","internalType":"address[]"},{"name":"licensesPercent","type":"uint32[]","internalType":"uint32[]"},{"name":"externalData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getPolicyRoyaltyStack(address)":"093f30a2","getPolicyRtsRequiredToLink(address,uint32)":"f2197fae","onLicenseMinting(address,uint32,bytes)":"4b02e1c0","onLinkToParents(address,address[],address[],uint32[],bytes)":"e9f89904"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"}],\"name\":\"getPolicyRoyaltyStack\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"licensePercent\",\"type\":\"uint32\"}],\"name\":\"getPolicyRtsRequiredToLink\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"licensePercent\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"externalData\",\"type\":\"bytes\"}],\"name\":\"onLicenseMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"parentIpIds\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"licenseRoyaltyPolicies\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"licensesPercent\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"externalData\",\"type\":\"bytes\"}],\"name\":\"onLinkToParents\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPolicyRoyaltyStack(address)\":{\"params\":{\"ipId\":\"The ID of the IP asset\"},\"returns\":{\"_0\":\"royaltyStack Sum of the royalty percentages to be paid to ancestors for a given royalty policy\"}},\"getPolicyRtsRequiredToLink(address,uint32)\":{\"params\":{\"ipId\":\"The ipId of the IP asset\",\"licensePercent\":\"The percentage of the license\"},\"returns\":{\"_0\":\"The amount of royalty tokens required to link a child to a given IP asset\"}},\"onLicenseMinting(address,uint32,bytes)\":{\"details\":\"Enforced to be only callable by RoyaltyModule\",\"params\":{\"externalData\":\"The external data custom to each the royalty policy\",\"ipId\":\"The ipId whose license is being minted (licensor)\",\"licensePercent\":\"The license percentage of the license being minted\"}},\"onLinkToParents(address,address[],address[],uint32[],bytes)\":{\"details\":\"Enforced to be only callable by RoyaltyModule\",\"params\":{\"externalData\":\"The external data custom to each the royalty policy\",\"ipId\":\"The children ipId that is being linked to parents\",\"licenseRoyaltyPolicies\":\"The royalty policies of the license\",\"licensesPercent\":\"The license percentages of the licenses being minted\",\"parentIpIds\":\"The parent ipIds that the children ipId is being linked to\"},\"returns\":{\"_0\":\"The royalty stack of the child ipId for a given royalty policy\"}}},\"title\":\"RoyaltyPolicy interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPolicyRoyaltyStack(address)\":{\"notice\":\"Returns the royalty stack for a given IP asset\"},\"getPolicyRtsRequiredToLink(address,uint32)\":{\"notice\":\"Returns the amount of royalty tokens required to link a child to a given IP asset\"},\"onLicenseMinting(address,uint32,bytes)\":{\"notice\":\"Executes royalty related logic on minting a license\"},\"onLinkToParents(address,address[],address[],uint32[],bytes)\":{\"notice\":\"Executes royalty related logic on linking to parents\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol\":\"IRoyaltyPolicy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@create3-deployer/=node_modules/@story-protocol/create3-deployer/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-periphery-v1/=lib/protocol-periphery-v1/\",\":solady/=node_modules/solady/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IExternalRoyaltyPolicy.sol\":{\"keccak256\":\"0xb7bfe0c76aa9a0a3ea9d0a4b8c869bf5a5c6d84d58c10d66ab7e0c9f7c0f759a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ca89ec876a9daa6236d17295def5eb872469b9763d1d54f81cea3a1fa0f9e75a\",\"dweb:/ipfs/QmYsjUc6DPc9UrskBoMCy2QsAU7T557QpnFh4UEz3y33pw\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol\":{\"keccak256\":\"0x9bcfd9bbb5712aac0413f03a7b99044a7a301bd84539b4900dd11fcc32e96fb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://86b1ed6ca81f85840ff3a7d057ff4253d15867f251e593d94e48bc4b99068d90\",\"dweb:/ipfs/QmeDFNumgVbybCBbyUFLSTnT7qre1svhkPFSyAE1C8Pmib\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"ipId","type":"address"}],"stateMutability":"view","type":"function","name":"getPolicyRoyaltyStack","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"address","name":"ipId","type":"address"},{"internalType":"uint32","name":"licensePercent","type":"uint32"}],"stateMutability":"view","type":"function","name":"getPolicyRtsRequiredToLink","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"address","name":"ipId","type":"address"},{"internalType":"uint32","name":"licensePercent","type":"uint32"},{"internalType":"bytes","name":"externalData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onLicenseMinting"},{"inputs":[{"internalType":"address","name":"ipId","type":"address"},{"internalType":"address[]","name":"parentIpIds","type":"address[]"},{"internalType":"address[]","name":"licenseRoyaltyPolicies","type":"address[]"},{"internalType":"uint32[]","name":"licensesPercent","type":"uint32[]"},{"internalType":"bytes","name":"externalData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onLinkToParents","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]}],"devdoc":{"kind":"dev","methods":{"getPolicyRoyaltyStack(address)":{"params":{"ipId":"The ID of the IP asset"},"returns":{"_0":"royaltyStack Sum of the royalty percentages to be paid to ancestors for a given royalty policy"}},"getPolicyRtsRequiredToLink(address,uint32)":{"params":{"ipId":"The ipId of the IP asset","licensePercent":"The percentage of the license"},"returns":{"_0":"The amount of royalty tokens required to link a child to a given IP asset"}},"onLicenseMinting(address,uint32,bytes)":{"details":"Enforced to be only callable by RoyaltyModule","params":{"externalData":"The external data custom to each the royalty policy","ipId":"The ipId whose license is being minted (licensor)","licensePercent":"The license percentage of the license being minted"}},"onLinkToParents(address,address[],address[],uint32[],bytes)":{"details":"Enforced to be only callable by RoyaltyModule","params":{"externalData":"The external data custom to each the royalty policy","ipId":"The children ipId that is being linked to parents","licenseRoyaltyPolicies":"The royalty policies of the license","licensesPercent":"The license percentages of the licenses being minted","parentIpIds":"The parent ipIds that the children ipId is being linked to"},"returns":{"_0":"The royalty stack of the child ipId for a given royalty policy"}}},"version":1},"userdoc":{"kind":"user","methods":{"getPolicyRoyaltyStack(address)":{"notice":"Returns the royalty stack for a given IP asset"},"getPolicyRtsRequiredToLink(address,uint32)":{"notice":"Returns the amount of royalty tokens required to link a child to a given IP asset"},"onLicenseMinting(address,uint32,bytes)":{"notice":"Executes royalty related logic on minting a license"},"onLinkToParents(address,address[],address[],uint32[],bytes)":{"notice":"Executes royalty related logic on linking to parents"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@create3-deployer/=node_modules/@story-protocol/create3-deployer/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@protocol-periphery-v1/=lib/protocol-periphery-v1/","@scroll-tech/=node_modules/@scroll-tech/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/script/=node_modules/@story-protocol/protocol-core/script/foundry/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/","hardhat/=node_modules/hardhat/","openzeppelin-foundry-upgrades/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-periphery-v1/=lib/protocol-periphery-v1/","solady/=node_modules/solady/","solidity-code-metrics/=node_modules/solidity-code-metrics/","solidity-stringutils/=lib/protocol-periphery-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol":"IRoyaltyPolicy"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IExternalRoyaltyPolicy.sol":{"keccak256":"0xb7bfe0c76aa9a0a3ea9d0a4b8c869bf5a5c6d84d58c10d66ab7e0c9f7c0f759a","urls":["bzz-raw://ca89ec876a9daa6236d17295def5eb872469b9763d1d54f81cea3a1fa0f9e75a","dweb:/ipfs/QmYsjUc6DPc9UrskBoMCy2QsAU7T557QpnFh4UEz3y33pw"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol":{"keccak256":"0x9bcfd9bbb5712aac0413f03a7b99044a7a301bd84539b4900dd11fcc32e96fb6","urls":["bzz-raw://86b1ed6ca81f85840ff3a7d057ff4253d15867f251e593d94e48bc4b99068d90","dweb:/ipfs/QmeDFNumgVbybCBbyUFLSTnT7qre1svhkPFSyAE1C8Pmib"],"license":"BUSL-1.1"}},"version":1},"id":98}